{{ 'international-logo-section.css' | asset_url | stylesheet_tag }}
{{ 'international-responsive.css' | asset_url | stylesheet_tag }}

<div class="international-network">
  <div class="page-width">
    <div class="network-text">
      <p class="network-heading">{{ section.settings.heading | default: "NUTRIFACTOR CAN BE FOUND ON THESE LARGEST NETWORKS" }}</p>
      <hr>
      <p>{{ section.settings.description | default: "Through sheer determination and constant hard work, Nutrifactor has been featured by some of the largest networks & business journals. Expanding its business to over 60 countries across the globe in 6 different continents, Nutrifactor is on its way to becoming a globally renowned brand." }}</p>
    </div>

    <div class="network-banner logos-per-{{ section.settings.logos_per_row }}">
      {% for block in section.blocks %}
        {% if block.type == 'logo' %}
          <img src="{{ block.settings.logo | image_url }}" alt="{{ block.settings.alt_text }}">
        {% endif %}
      {% endfor %}
    </div>
  </div>
</div>

{% schema %}
{
  "name": "Logo Section",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "NUTRIFACTOR CAN BE FOUND ON THESE LARGEST NETWORKS"
    },
    {
      "type": "textarea",
      "id": "description",
      "label": "Description",
      "default": "Through sheer determination and constant hard work, Nutrifactor has been featured by some of the largest networks & business journals. Expanding its business to over 60 countries across the globe in 6 different continents, Nutrifactor is on its way to becoming a globally renowned brand."
    },
    {
      "type": "range",
      "id": "logos_per_row",
      "label": "Logos per row",
      "min": 2,
      "max": 6,
      "step": 1,
      "default": 5
    }
  ],
  "blocks": [
    {
      "type": "logo",
      "name": "Logo",
      "limit": 5,
      "settings": [
        {
          "type": "image_picker",
          "id": "logo",
          "label": "Logo image"
        },
        {
          "type": "text",
          "id": "alt_text",
          "label": "Alt text",
          "default": "Network logo"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Logo Section",
      "category": "International Section"
    }
  ]
}
{% endschema %}

<script>
(function () {
  const MOBILE_MAX = 767;
  const STYLE_ID = 'logo-carousel-mobile-styles';
  const ACTIVE_CLASS = 'logo-carousel-active';

  // Inject mobile-only styles (scoped to .network-banner.logo-carousel-active)
  if (!document.getElementById(STYLE_ID)) {
    const style = document.createElement('style');
    style.id = STYLE_ID;
    style.textContent = `
/* Mobile carousel styles (scoped) */
.network-banner.${ACTIVE_CLASS} {
  overflow-x: auto !important;
  -webkit-overflow-scrolling: touch !important;
  scroll-snap-type: x mandatory !important;
  display: flex !important;
  gap: 20px !important;
  justify-content: flex-start !important;
  padding: 10px 15px !important;
  width: 100% !important;
  box-sizing: border-box !important;
}
.network-banner.${ACTIVE_CLASS} img {
  flex: 0 0 auto !important;
  scroll-snap-align: center !important;
  max-height: 48.75px !important; /* respects your existing img height */
  width: auto !important;
}
/* hide WebKit scrollbar for better appearance */
.network-banner.${ACTIVE_CLASS}::-webkit-scrollbar { display: none; }
.network-banner.${ACTIVE_CLASS}.is-dragging { cursor: grabbing; cursor: -webkit-grabbing; }
`;
    document.head.appendChild(style);
  }

  function initForBanner(banner) {
    if (!banner || banner.dataset.logoCarousel === 'true') return;
    banner.dataset.logoCarousel = 'true';
    banner.classList.add(ACTIVE_CLASS);

    // pointer/touch drag support (works for touch & mouse via Pointer Events where available)
    let isDown = false;
    let startX = 0;
    let scrollLeft = 0;

    function downHandler(e) {
      isDown = true;
      banner.classList.add('is-dragging');
      const clientX = (e.touches ? e.touches[0].clientX : (e.clientX || 0));
      startX = clientX;
      scrollLeft = banner.scrollLeft;
    }

    function moveHandler(e) {
      if (!isDown) return;
      // prevent page scroll while dragging horizontally
      if (e.cancelable) e.preventDefault();
      const clientX = (e.touches ? e.touches[0].clientX : (e.clientX || 0));
      const walk = (clientX - startX) * 1.5; // speed factor
      banner.scrollLeft = scrollLeft - walk;
    }

    function upHandler() {
      isDown = false;
      banner.classList.remove('is-dragging');
    }

    // Use Pointer Events if supported
    if (window.PointerEvent) {
      banner.addEventListener('pointerdown', downHandler);
      banner.addEventListener('pointermove', moveHandler);
      window.addEventListener('pointerup', upHandler);
      banner._logoCarouselHandlers = { type: 'pointer', downHandler, moveHandler, upHandler };
    } else {
      // fallback: touch + mouse
      banner.addEventListener('touchstart', downHandler, { passive: false });
      banner.addEventListener('touchmove', moveHandler, { passive: false });
      banner.addEventListener('touchend', upHandler);
      banner.addEventListener('mousedown', downHandler);
      banner.addEventListener('mousemove', moveHandler);
      window.addEventListener('mouseup', upHandler);
      banner._logoCarouselHandlers = { type: 'fallback', downHandler, moveHandler, upHandler };
    }
  }

  function destroyForBanner(banner) {
    if (!banner || banner.dataset.logoCarousel !== 'true') return;
    banner.dataset.logoCarousel = 'false';
    banner.classList.remove(ACTIVE_CLASS);

    const h = banner._logoCarouselHandlers;
    if (!h) return;

    if (h.type === 'pointer') {
      banner.removeEventListener('pointerdown', h.downHandler);
      banner.removeEventListener('pointermove', h.moveHandler);
      window.removeEventListener('pointerup', h.upHandler);
    } else {
      banner.removeEventListener('touchstart', h.downHandler);
      banner.removeEventListener('touchmove', h.moveHandler);
      banner.removeEventListener('touchend', h.upHandler);
      banner.removeEventListener('mousedown', h.downHandler);
      banner.removeEventListener('mousemove', h.moveHandler);
      window.removeEventListener('mouseup', h.upHandler);
    }
    delete banner._logoCarouselHandlers;
  }

  function runInit(root = document) {
    const banners = root.querySelectorAll('.network-banner');
    banners.forEach(b => {
      if (window.innerWidth <= MOBILE_MAX) initForBanner(b); else destroyForBanner(b);
    });
  }

  // debounce helper
  function debounce(fn, wait = 150) {
    let t;
    return function () {
      clearTimeout(t);
      t = setTimeout(() => fn.apply(this, arguments), wait);
    };
  }

  // run on load
  document.addEventListener('DOMContentLoaded', function () {
    runInit();
    window.addEventListener('resize', debounce(runInit, 200));
  });

  // Shopify dynamic events (editor + live reloads)
  document.addEventListener('shopify:section:load', function (e) { runInit(e.target); });
  document.addEventListener('shopify:section:unload', function (e) {
    // clean up banners in unloaded section
    const banners = e.target.querySelectorAll('.network-banner');
    banners.forEach(b => destroyForBanner(b));
  });
  // also handle arbitrary DOM insertions (cover edge-cases)
  document.addEventListener('shopify:block:select', function (e) { runInit(e.target); });

})();
</script>
