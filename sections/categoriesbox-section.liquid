{{ 'section-categoriesbox.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<div class="categoriesbox-section color-{{ section.settings.color_scheme }} gradient{% unless section.settings.background_style == 'none' and settings.text_boxes_border_thickness > 0 or settings.text_boxes_shadow_opacity > 0 %} background-{{ section.settings.background_style }}{% endunless %}{% if section.settings.title == blank %} no-heading{% endif %}">
  <div
    class="section-{{ section.id }}-padding page-width isolate{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
    {% if settings.animations_reveal_on_scroll %}
      data-cascade
    {% endif %}
  >
    
    {% if section.settings.title != blank %}
      <div class="halo-block-header text-center">
        <h3 class="title">
          <span class="text">{{ section.settings.title }}</span>
        </h3>
      </div>
    {% endif %}
    
    <div class="halo-row categoriesBoxOuter">
        {% for block in section.blocks %}
        <div class="categoryBox">
            {% if block.settings.url != blank %}
              <a href="{{ block.settings.url }}">link</a>
              <div class="categoryIcon">
                {% if block.settings.image %}
                  <img
                    src="{{ block.settings.image | image_url: width: 100 }}"
                    alt="{{ block.settings.title | escape }}"
                    width="100"
                    height="100"
                  >
                  {% endif %}
                </div>
                <div class="categoryTxt">{{ block.settings.title }}</div>
              </div>
            {% endif %}
        {% endfor %}
    </div>
    <div class="btn-content">
        <button class="button" id="categoryViewMore" onclick="handleViewMoreClick()">
        <span>View More</span>
      </button>
      {% if section.settings.view_all_url %}
        <a class="button" id="categoryViewAll" href="{{ section.settings.view_all_url }}">
          <span>{{ section.settings.view_all_text }}</span>
        </a>
      {% endif %}
    </div>
  </div>
</div>

<script>
  var categoryCard = document.getElementsByClassName("categoryBox");
  
  if (window.innerWidth < 768) {
    if(categoryCard.length > 9){
      document.getElementById('categoryViewMore').style.setProperty('display', 'inline-flex', 'important');
      document.getElementById('categoryViewAll').style.display='none'
      for(let i=0; i<9; i++){
        categoryCard[i].style.display = "flex";
      }
    }else {
        document.getElementById('categoryViewMore').style.display='none'
        document.getElementById('categoryViewAll').style.setProperty('display', 'inline-flex', 'important');
        for(let i=0; i<9;i++ ){
          categoryCard[i].style.display = "flex";
        }
    }
  }else if(window.innerWidth < 992){
    if(categoryCard.length > 8){
      document.getElementById('categoryViewMore').style.setProperty('display', 'inline-flex', 'important');
      document.getElementById('categoryViewAll').style.display='none'
      for(let i=0; i < 8 ;i++ ){
       categoryCard[i].style.display = "flex";
      }  
    }else {
       document.getElementById('categoryViewMore').style.display='none'
       document.getElementById('categoryViewAll').style.setProperty('display', 'inline-flex', 'important');
       for(let i=0; i < categoryCard.length ;i++ ){
         categoryCard[i].style.display = "flex";
       } 
    }
}
 else{
      if(categoryCard.length > 12){
         document.getElementById('categoryViewMore').style.setProperty('display', 'inline-flex', 'important');
         document.getElementById('categoryViewAll').style.display='none'
         for(let i=0; i <12 ;i++ ){
           categoryCard[i].style.display = "flex";
          }
      }else {
        document.getElementById('categoryViewMore').style.display='none'
        document.getElementById('categoryViewAll').style.setProperty('display', 'inline-flex', 'important');
        for(let i=0; i <12 ;i++ ){
           categoryCard[i].style.display = "flex";
          }
      }
   
    
    }
    function handleViewMoreClick() {
      for(let j=0;j<categoryCard.length;j++){
         categoryCard[j].style.display = "flex";
      }
      document.getElementById('categoryViewMore').style.display='none'
      document.getElementById('categoryViewAll').style.display='inline-flex'
    }
</script>

{% schema %}
{
  "name": "CategoriesBox",
  "class": "section",
  "tag": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "inline_richtext",
      "id": "title",
      "label": "Heading"
    },
    {
      "type": "header",
      "content": "Section Button"
    },
    {
      "type": "url",
      "id": "view_all_url",
      "label": "View All Products URL"
    },
    {
      "type": "text",
      "id": "view_all_text",
      "label": "View All Button Text",
      "default": "View All Products"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "column",
      "name": "Category box",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Category box Image"
        },
        {
          "type": "inline_richtext",
          "id": "title",
          "label": "Category box Text"
        },
        {
          "type": "url",
          "id": "url",
          "label": "Category URL"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "CategoriesBox",
      "blocks": [
        {
          "type": "column"
        },
        {
          "type": "column"
        },
        {
          "type": "column"
        }
      ]
    }
  ]
}
{% endschema %}